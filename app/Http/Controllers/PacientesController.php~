<?php

namespace App\Http\Controllers;

use DB;
use App\pacientes;

use Carbon\Carbon;
use Auth;
use Storage;
use Validator;
use Illuminate\Http\Request;
use App\Http\Requests;


class PacientesController extends Controller
{
    public function __construct()
    {
        $this->middleware('auth');
    }

    public function index(Request $request)
    {  	
    	$numpag = 11;

    	$pacientes = DB::table('pacientes')->orderBy('apepac', 'ASC')->orderBy('nompac', 'ASC')->paginate($numpag);
    	$countpac = DB::table('pacientes')->count(); 
	          
      if ( $request->session()->has('idpac') ) {
			$idpac = $request->session()->get('idpac');
			$apepac = $request->session()->get('apepac');
			$nompac = $request->session()->get('nompac');
			$apnompac = $apepac.', '.$nompac;       	
  	
         return view('pac.index', ['pacientes' => $pacientes,
         								'request' => $request,
         								'countpac' => $countpac,         								
        								   'idpac' => $idpac,
        								   'apnompac' => $apnompac]);
		} else {
         return view('pac.index', ['pacientes' => $pacientes,
         								  'request' => $request,
         								  'countpac' => $countpac]);
      }    
    }
  
    public function ver(Request $request)
    {  	
    	$busca = $request->input('busca');
   	
	  	if ( isset($busca) ) {
		  $busca = htmlentities (trim($busca),ENT_QUOTES,"UTF-8"); 		  
  		  $pacientes = DB::table('pacientes')->where('apepac','LIKE','%'.$busca.'%')->orderBy('apepac','ASC')->orderBy('nompac','ASC')->get();
  		  $countpac = DB::table('pacientes')->where('apepac','LIKE','%'.$busca.'%')->orderBy('apepac','ASC')->orderBy('nompac','ASC')->count();
  		} 
  		     
      if ( $request->session()->has('idpac') ) {

			$idpac = $request->session()->get('idpac');
			$apepac = $request->session()->get('apepac');
			$nompac = $request->session()->get('nompac');
			$apnompac = $apepac.', '.$nompac;       	
  	
         return view('pac.ver', ['pacientes' => $pacientes,
         								'request' => $request,
         								'countpac' => $countpac,         								
        								   'idpac' => $idpac,
        								   'apnompac' => $apnompac]);
		} else {
         return view('pac.ver', ['pacientes' => $pacientes,
         								'request' => $request,
         								'countpac' => $countpac]);
      }    
    }   

    public function pacsel(Request $request)
    {
	    	if ( null !== $request->input('idpac') ) {
	    		
	    		$idpac = $request->input('idpac');
	    		
	    		$request->session()->forget('idpac');
	        	$request->session()->put('idpac', $idpac);
	        	
	        	$pacientes = pacientes::find($idpac);
	        	
	        	$apepac = $pacientes->apepac;        	
	    		$request->session()->forget('apepac');
	        	$request->session()->put('apepac', $apepac);	    
	        	
	        	$nompac = $pacientes->nompac;        	
	    		$request->session()->forget('nompac');
	        	$request->session()->put('nompac', $nompac);
	        	        
	        	if ( $request->session()->has('usefile') ) { $request->session()->forget('usefile'); }	         
             
	         $usefile = '/usefile/'.$idpac;

	         $request->session()->put('usefile', $usefile);
	         
	         if ( ! Storage::exists($usefile) ) { Storage::makeDirectory($usefile, 0770, true); }
	         
	         if ( $request->session()->has('thumbdir') ) { $request->session()->forget('thumbdir'); }
	         if ( $request->session()->has('odogramdir') ) { $request->session()->forget('odogramdir'); }

	         $thumbdir = $usefile.'/.thumbdir';
	         $odogramdir = $usefile.'/.odogramdir';
	         
	         $request->session()->forget('thumbdir');
	         $request->session()->put('thumbdir', $thumbdir);
	         
	         $request->session()->forget('odogramdir');
	         $request->session()->put('odogramdir', $odogramdir);
	         
	         if ( ! Storage::exists($thumbdir) ) { Storage::makeDirectory($thumbdir); }
	         if ( ! Storage::exists($odogramdir) ) { Storage::makeDirectory($odogramdir); }
	        	        	
	        	return redirect('Pacientes/pacprof'); 
	        
	      } else {
	      	$request->session()->flash('errors', 'Error!!!');
	      	
	      	return redirect('Pacientes');  
	      }
    }
    
    
    public function pacprof(Request $request)
    {
    	  
    	  if ( ! $request->session()->has('idpac') ) {
    	  		return redirect('Pacientes');
    	  }
    	  
    	  $username = Auth::user()->username;
    	  
    	  $idpac = $request->session()->get('idpac');
    	  $apepac = $request->session()->get('apepac');
    	  $nompac = $request->session()->get('nompac');
    	  $apnompac = $apepac.', '.$nompac;
    	    
	     $pacientes = DB::table('pacientes')->where('idpac', $idpac)->first();
	     	     
	     $citas = DB::table('citas')
						       ->where('idpac', $idpac)
						       ->select('idcit','idpac','nompac','diacit','horacit','notas')
						       ->orderBy('diacit', 'ASC')
				  				 ->orderBy('horacit', 'ASC')
				  				 ->get();
	     
	     $tratampacien = DB::table('tratampacien')
			       			->where('idpac', $idpac)
	  							->select('idpac','nompro','precio','canti','pagado','fecha','notas','idtra','per1','per2')    							
	  							->orderBy('fecha' , 'ASC')
	  							->get();   
	     
	     $sumtot = DB::table('tratampacien')
			       			->where('idpac', $idpac)
	  							->select( DB::raw('SUM(canti*precio) AS sumtot') )
	  							->first();     

	     $totpaga = DB::table('tratampacien')
			       			->where('idpac', $idpac)
	  							->select( DB::raw('SUM(pagado) AS totpaga') )
	  							->first();
	  							
	
	  	  $fechnac = trim($pacientes->fechnac);
	  	  
	  	  $Fecha = explode("-",$fechnac,3);
	  	  
	  	  $Fecha0 = $Fecha[0];
	  	  $Fecha1 = $Fecha[1];
	  	  $Fecha2 = $Fecha[2];
	  	  
	  	  $Edad = Carbon::createFromDate($Fecha0,$Fecha1,$Fecha2)->age;
    	          
        return view('pac.pacprof', ['request' => $request,
        										'pacientes' => $pacientes,
        										'citas' => $citas,
        										'tratampacien' => $tratampacien,
        										'sumtot' => $sumtot,
        										'totpaga' => $totpaga,
	         								'idpac' => $idpac,
	        								   'apepac' => $apepac,
	        								   'nompac' => $nompac,
	        								   'apnompac' => $apnompac,
	        								   'username' => $username,
	        								   'Edad' => $Edad]);       
    }


    public function create(Request $request)
    {
		  return view('pac.create', ['request' => $request]);	
    }


    public function store(Request $request)
    {
        $validator = Validator::make($request->all(),[
        			'nompac' => 'required|max:44',
	            'apepac' => 'required|max:77',
	            'dnipac' => 'max:12',
	            'tel1' => 'max:11',
	            'tel2' => 'max:11',
	            'tel3' => 'max:11',
	            'sexo' => 'max:12',
	            'notas' => '',
	            'direc' => 'max:44',
	            'pobla' => 'max:222',
	            'fechnac' => 'required|date']);
            
        if ($validator->fails()) {
	         return redirect('Pacientes')
	                     ->withErrors($validator)
	                     ->withInput();
	     } else {
	        	
	        	$nompac = ucfirst(strtolower( $request->input('nompac') ) );
	        	$apepac = ucwords(strtolower( $request->input('apepac') ) );
	        	$notas = ucfirst(strtolower( $request->input('notas') ) );
	        	$direc = ucfirst(strtolower( $request->input('direc') ) );
	        	$pobla = ucfirst(strtolower( $request->input('pobla') ) );
	        	
				$nompac = htmlentities (trim($nompac),ENT_QUOTES,"UTF-8");
				$apepac = htmlentities (trim($apepac),ENT_QUOTES,"UTF-8");
				$dnipac = htmlentities (trim($request->input('dnipac')),ENT_QUOTES,"UTF-8");
				$tel1 = htmlentities (trim($request->input('tel1')),ENT_QUOTES,"UTF-8");
				$tel2 = htmlentities (trim($request->input('tel2')),ENT_QUOTES,"UTF-8");
				$tel3 = htmlentities (trim($request->input('tel3')),ENT_QUOTES,"UTF-8");
				$sexo = htmlentities (trim($request->input('sexo')),ENT_QUOTES,"UTF-8");
				$notas = htmlentities (trim($notas),ENT_QUOTES,"UTF-8");
				$direc = htmlentities (trim($direc),ENT_QUOTES,"UTF-8");
				$pobla = htmlentities (trim($pobla),ENT_QUOTES,"UTF-8");
				$fechnac = htmlentities (trim($request->input('fechnac')),ENT_QUOTES,"UTF-8");
	        	        	
		      pacientes::create([
		          'nompac' => $nompac,
		          'apepac' => $apepac,
		          'dnipac' => $dnipac,
		          'tel1' => $tel1,
		          'tel2' => $tel2,
		          'tel3' => $tel3,
		          'sexo' => $sexo,
		          'notas' => $notas,
		          'direc' => $direc,
		          'pobla' => $pobla,
		          'fechnac' => $fechnac]);
		      
		      $request->session()->flash('message', 'Hecho!!!');	
	        	        	
	        	return redirect('Pacientes/create');
        }      
    }

    public function show(Request $request, $idpac)
    {         
    }
  
    public function edit(Request $request, $idpac)
    {

	   $sesid = trim ( $request->session()->get('idpac') );
	   $resid = trim ( $request->input('idpac') );
	    		
	   if ( $sesid != $resid ) {
	   	return redirect('Pacientes');
	   }	

    	if ( null === $request->input('idpac') ) {
    	
	    	if ( $request->session()->has('idpac') ) {
	    		
	        $idpac = $request->input('idpac');
	        $pacientes = pacientes::find($idpac);        
	        
	        return view('pac.edit', ['request' => $request,'pacientes' => $pacientes,'idpac' => $idpac]);
	        
	      } else {     
	        return redirect('Pacientes');
	      }
	      
      } else {     
	     return redirect('Pacientes');
	   }
    }

 
    public function update(Request $request, $idpac)
    {
	    	if ( $request->session()->has('idpac') ) {
	    		
	    		$sesid = trim ( $request->session()->get('idpac') );
	    		$resid = trim ( $request->input('idpac') );
	    		
	    		if ( $sesid != $resid ) {
	    			return redirect('Pacientes');
	    		}	
	    		    		
	    		$fechnac = $request->input('fechnac');
	    		
	    		$regex = '/^(18|19|20)\d\d[\/\-.](0[1-9]|1[012])[\/\-.](0[1-9]|[12][0-9]|3[01])$/';
	    		
	    		if ( preg_match($regex, $fechnac) ) {  } else {
			 	   $request->session()->flash('errors', 'Fecha/s incorrecta');
					header("Location: /Pacientes/edit");
			 		die(); 
		 		}
	    		
	    		$idpac = $request->input('idpac');
	    		
	    		$pacientes = pacientes::find($idpac);
	    		  		
	        	$nompac = ucfirst(strtolower( $request->input('nompac') ) );
	        	$apepac = ucwords(strtolower( $request->input('apepac') ) );
	        	$notas = ucfirst(strtolower( $request->input('notas') ) );
	        	$direc = ucfirst(strtolower( $request->input('direc') ) );
	        	$pobla = ucfirst(strtolower( $request->input('pobla') ) );
	        	
				$pacientes->nompac = htmlentities (trim($nompac),ENT_QUOTES,"UTF-8");
				$pacientes->apepac = htmlentities (trim($apepac),ENT_QUOTES,"UTF-8");
				$pacientes->dnipac = htmlentities (trim($request->input('dnipac')),ENT_QUOTES,"UTF-8");
				$pacientes->tel1 = htmlentities (trim($request->input('tel1')),ENT_QUOTES,"UTF-8");
				$pacientes->tel2 = htmlentities (trim($request->input('tel2')),ENT_QUOTES,"UTF-8");
				$pacientes->tel3 = htmlentities (trim($request->input('tel3')),ENT_QUOTES,"UTF-8");
				$pacientes->sexo = htmlentities (trim($request->input('sexo')),ENT_QUOTES,"UTF-8");
				$pacientes->notas = htmlentities (trim($notas),ENT_QUOTES,"UTF-8");
				$pacientes->direc = htmlentities (trim($direc),ENT_QUOTES,"UTF-8");
				$pacientes->pobla = htmlentities (trim($pobla),ENT_QUOTES,"UTF-8");
				$pacientes->fechnac = htmlentities (trim($request->input('fechnac')),ENT_QUOTES,"UTF-8");
				
				$pacientes->save();
	      
		      $request->session()->flash('message', 'Hecho!!!');
		        	
		      return redirect('Pacientes/pacprof');
	        
	      } else {
	         return redirect('Pacientes');  
	      }
    }

  
    public function pacfile(Request $request)
    {
    	  if ( ! $request->session()->has('idpac') ) {
    	  		return redirect('Pacientes');
    	  }
    	  
    	  $usefile = $request->session()->get('usefile');
    	  
    	  $files = Storage::files($usefile);	  
    	  
    	  return view('pac.pacfile', ['request' => $request, 'files' => $files]);
    }
    
   
    public function odogram(Request $request)
    {
    	  if ( ! $request->session()->has('idpac') ) {	  	
    	  		$request->session()->flash('errors', 'Error');
    	  		return redirect('Pacientes');
    	  }
    	  
    	  $idpac = $request->session()->get('idpac');    	  
    	  $odogramdir = $request->session()->get('odogramdir');    	  
    	  $odogram = $odogramdir.'/'.$idpac.'.jpg';
    	  
    	  if ( ! Storage::exists($odogram) ) {
    	  		$img = '/img/a.jpg';    	  		
    	  		Storage::copy($img, $odogram);
		  }  
    	  
    	  return view('pac.odogram', ['request' => $request, 'odogram' => $odogram]);
    }
    
    public function resetodogram(Request $request)
    {  
    	 if ( ! $request->session()->has('idpac') ) {	 	  
    	 	  $request->session()->flash('errors', 'Error');
    	 	  return redirect('Pacientes');
    	 }    
 
		 $resetodogram = $request->input('resetodogram');
		 
		 if ( $resetodogram == 1 ) {	 	
			  $idpac = $request->session()->get('idpac');    	  
	    	  $odogramdir = $request->session()->get('odogramdir');    	  
	    	  $odogram = $odogramdir.'/'.$idpac.'.jpg';
	    	  $img = '/img/a.jpg';
	    	  Storage::copy($img, $odogram);
	    	  
	    	  return view('pac.odogram', ['request' => $request, 'odogram' => $odogram]);	

		 }	else {
		 	  $request->session()->flash('errors', 'Error');
		 	  return redirect('Pacientes');
		 }	
    }

    public function pacdel(Request $request)
    {
    	  if ( ! $request->session()->has('idpac') ) {
    	  		return redirect('Pacientes');
    	  }
    	  
    	  return view('pac.pacdel', ['request' => $request]);
    }
 
    public function destroy(Request $request,$idpac)
    {      
    	  if ( ! $request->session()->has('idpac') ) {
    	  		return redirect('Pacientes');
    	  }       
        
        $pacientes = pacientes::find($idpac);
      
        $pacientes->delete();
        
        return redirect('Pacientes');
    }
}
